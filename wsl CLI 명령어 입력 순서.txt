< simpleweb 프로젝트에서 wsl CLI 명령어 입력 순서 >

순서1) mkdir simpleweb 입력: 새로운 폴더(디렉토리) simpleweb를 만든다.
순서2) 위 주소 \\wsl$\Ubuntu\home\yujong\simpleweb을 복사해서 vscode의 '폴더 불러오기 open folder'에서 디렉토리 주소에 붙여넣고, 
        거기서 simpleweb 폴더 선택해서 열면 됨.
        그리고, 그 simpleweb 폴더 내부에 이런저런 Dockerfile코드 작성한다.
순서3) wsl 창에서는 디렉토리 경로를 cd simpleweb 로 해서 바꿔주고,
순서4) '명령어 code .'을 입력해서 새로운 vscode 창에서 소스코드 작성해도 되고, 아니면 그냥 원래 vscode 기존 창에서 소스코드 작성해도 된다!
순서5) '명령어 docker build yujong/simpleweb .'을 입력하고,
         : vscode에서 작성한 Dockerfile을 Docker CLI에 전달해주고, 그 도커파일을 통해 도커 이미지를 생성하라는 의미임.
순서6) 'docker run -p 8080:8080 yujong/simpleweb'을 입력하면 됨.  
         cf) 컴퓨터 껐다가 나중에 다른 일 하고 다시 켠 후에, 도커 이미지 다시 빌드 할 필요 없이 그냥 이 명령어만 입력해도 됨.
         cf)  'docker run yujong/simpleweb' 라고만 입력하면, 브라우저에서 내 로컬 네트워크로 들어온 포트 8080
# 포트 매핑, 포트 포워딩

순서7) 이제 크롬 URL 창에 localhost:8080 이라고 입력하면, 화면에서 'index.js'에 적힌 'Hi there'을 볼 수 있다.
         여기서의 8080은 '첫 번째 8080'이고, 웹브라우저에서 내 호스트 컴퓨터(?)로 들어온 통신(?)이다.




- docker run -p 8080:8080 [image name]
  ~ 첫 번째 8080: 외부에서 들어온 통신(?)을 받는 호스트 컴퓨터(?)의 포트번호. Route incoming request to this port on local host to...
  ~ 두 번째 8080: 생성된 컨테이너 자체의 포트번호. ...this port inside the container
- 여기서 '첫 번째 8080'은 꼭 '숫자 8080'일 필요 없음. 4444, 4000, 5000 등 내 마음대로 설정 가능함.
  대신, 크롬 URL 창에는 localhost:4444, localhost:4000, localhost:5000 등이라고 입력해야 함.
- '두 번째 8080'도 꼭 8080일 필요 없음. 내 임의대로 설정 가능함.
  대신, vscode의 'index.js 파일' 내부에서 'app.listen(8080, ...)'에서의 8080이 바로 '컨테이너의 포트번호' 이기에, 이 포트번호를 그에 맞춰 변경시켜줘야 함.