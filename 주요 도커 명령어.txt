< 주요 도커 명령어 >


0. 
docker --version: Docker가 정상적으로 설치되었는지 확인합니다.


1. 이미지 관련 명령어:

docker images: 저장된 도커 이미지 리스트를 확인합니다.
docker pull [이미지명:태그]: 도커 이미지를 레지스트리로부터 다운받습니다.
docker search [검색어]: 도커 허브에서 이미지 검색합니다.
docker rmi [이미지ID 또는 이미지명:태그]: 이미지를 삭제합니다.
docker build -t [이미지명:태그] [Dockerfile 경로]: 도커 이미지를 빌드합니다.
docker image list: 이미지 목록을 확인합니다.


2. 컨테이너 관련 명령어:

docker ps: 현재 실행 중인 컨테이너 리스트를 확인합니다.
docker ps -a: 모든 컨테이너 리스트를 확인합니다.
docker ps --all: 내 컴퓨터에서 과거부터 현재까지 실행되었던(현재 실행 중인 컨테이너 포함) 모든 컨테이너들을 컨테이너 ID도 포함하여 보여주는 명령어
docker run [옵션] [이미지명:태그] [실행 명령어]: 새로운 컨테이너를 생성하고 실행합니다. e.g) docker run hello-world
# docker stop [컨테이너_이름_혹은_ID]: 컨테이너 실행 중지
# docker start [컨테이너_이름_혹은_ID]: 컨테이너 실행
# docker logs [컨테이너ID]: 컨테이너 로그를 출력합니다.
# docker exec [옵션] [컨테이너ID] [명령어]: 실행 중인 컨테이너에서 명령어를 실행합니다.
# docker rm [컨테이너ID]: 컨테이너를 삭제합니다.


3. 네트워크 관련 명령어:

docker network ls: 네트워크 목록을 확인합니다.
docker network create [옵션] [네트워크명]: 도커 네트워크를 생성합니다.
docker network connect [네트워크명] [컨테이너ID]: 컨테이너를 네트워크에 연결합니다.
docker network disconnect [네트워크명] [컨테이너ID]: 컨테이너를 네트워크에서 연결 해제합니다.
docker network rm [네트워크명]: 도커 네트워크를 삭제합니다.


4. 볼륨 관련 명령어:

docker volume ls: 볼륨 목록을 확인합니다.
docker volume create [옵션] [볼륨명]: 도커 볼륨을 생성합니다.
docker volume rm [볼륨명]: 도커 볼륨을 삭제합니다.
